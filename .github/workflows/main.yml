            - name: Python Semantic Release
  # You may pin to the exact commit or the version.
  # uses: python-semantic-release/python-semantic-release@1a324000f2251a9e722e77b128bf72712653813f
  uses: python-semantic-release/python-semantic-release@v10.0.2
  with:
    # Path to a custom semantic-release configuration file. By default, an empty
string will look for a pyproject.toml file in the current directory. This is the same
as passing the `-c` or `--config` parameter to semantic-release.

    config_file: # optional, default is 
    # Sub-directory to cd into before running semantic-release
    directory: # optional, default is .
    # GitHub token used to push release notes and new commits/tags
    github_token: 
    # The human name for the “committer” field
    git_committer_name: # optional
    # The email address for the “committer” field
    git_committer_email: # optional
    # If set to true, the github action will pass the `--noop` parameter to
semantic-release. This will cause semantic-release to run in "no operation"
mode. See the documentation for more information on this parameter. Note that,
this parameter will not affect the output of the action, so you will still get
the version determination decision as output values.

    no_operation_mode: # optional, default is false
    # The ssh public key used to sign commits
    ssh_public_signing_key: # optional
    # The ssh private key used to sign commits
    ssh_private_signing_key: # optional
    # If set to true, the github action will pass the `--strict` parameter to
semantic-release. See the documentation for more information on this parameter.

    strict: # optional, default is false
    # Set the verbosity level of the output as the number of -v's to pass to
semantic-release. 0 is no extra output, 1 is info level output, 2 is
debug output, and 3 is silly debug level of output.

    verbosity: # optional, default is 1
    # Force the next version to be a prerelease. Set to "true" or "false".

    prerelease: # optional
    # Force the next version to use this prerelease token, if it is a prerelease
    prerelease_token: # optional
    # Force the next version to be a major release. Must be set to
one of "prerelease", "patch", "minor", or "major".

    force: # optional
    # Whether or not to commit changes locally. Defaults are handled by python-semantic-release internal version command.
    commit: # optional
    # Whether or not to make a local version tag. Defaults are handled
by python-semantic-release internal version command.

    tag: # optional
    # Whether or not to push local commits to the Git repository. See
the configuration page for defaults of `semantic-release version`
for how the default is determined between push, tag, & commit.

    push: # optional
    # Whether or not to update the changelog.

    changelog: # optional
    # Whether or not to create a release in the remote VCS, if supported

    vcs_release: # optional
    # Whether or not to run the build_command for the project. Defaults are
handled by python-semantic-release internal version command.

    build: # optional
    # Build metadata to append to the new version

    build_metadata: # optional
          
